---
# Jenkins doesn't allow updates via CLI, though that is required before plugins
# can be installed via CLI. See: https://gist.github.com/rowan-m/1026918
- name: Create Jenkins updates folder.
  file:
    path: "{{ jenkins_home }}/updates"
    owner: jenkins
    group: jenkins
    mode: 0755
    state: directory
  register: jenkins_plugins_folder_create

- name: Update Jenkins plugin data.
  get_url:
    url: "https://updates.jenkins-ci.org/update-center.json"
    dest: "{{ jenkins_home }}/updates/default.json"

- name: Permissions for default.json updates info.
  file:
    path: "{{ jenkins_home }}/updates/default.json"
    owner: jenkins
    group: jenkins
    mode: 0755
  when: jenkins_plugins_folder_create.changed

- name: Install Jenkins plugins using password.
  command: >
    java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/
    install-plugin {{ item }}
    --username {{ jenkins_admin_username }}
    --password {{ jenkins_admin_password }}
    creates="{{ jenkins_home }}/plugins/{{ item }}.jpi"
  with_items:
    - "git"
    - "git-client"
    - "blueocean-autofavorite"
    - "blueocean-commons"
    - "blueocean-config"
    - "blueocean-dashboard"
    - "blueocean-display-url"
    - "blueocean-events"
    - "blueocean-i18n"
    - "blueocean-jwt"
    - "blueocean-personalization"
    - "blueocean-pipeline-api-impl"
    - "blueocean-rest-impl"
    - "blueocean-rest"
    - "blueocean-web"
    - "blueocean"
    - "credentials"
    - "credentials-binding"
    - "dashboard-view"
    - "ssh-agent"
    - "ssh-credentials"
    - "ssh-slaves"
    - "greenballs"
    - "mattermost"

- name: Install Jenkins Docker plugins using password.
  command: >
    java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/
    install-plugin {{ item }}
    --username {{ jenkins_admin_username }}
    --password {{ jenkins_admin_password }}
    creates="{{ jenkins_home }}/plugins/{{ item }}.jpi"
  with_items:
    - "docker-build-publish"
    - "docker-commons"
    - "docker-plugin"
    - "docker-workflow"
    - "sbt"
  when: jenkins_plugins_check_docker == "1"

- name: Install Jenkins GitLab plugins using password.
  command: >
   java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/
   install-plugin {{ item }}
   --username {{ jenkins_admin_username }}
   --password {{ jenkins_admin_password }}
    creates="{{ jenkins_home }}/plugins/{{ item }}.jpi"
  with_items:
      - "gitlab-hook"
      - "gitlab-merge-request-jenkins"
      - "gitlab-oauth"
      - "gitlab-plugin"
  when: jenkins_plugins_check_gitlab == "1"

- name: Install Jenkins GitHub plugins using password.
  command: >
    java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/
    install-plugin {{ item }}
    --username {{ jenkins_admin_username }}
    --password {{ jenkins_admin_password }}
    creates="{{ jenkins_home }}/plugins/{{ item }}.jpi"
  with_items:
    - "github"
    - "github-api"
    - "github-branch-source"
  when: jenkins_plugins_check_github == "1"

- name: Install Jenkins additional plugins using password.
  command: >
    java -jar {{ jenkins_jar_location }} -s http://{{ jenkins_hostname }}:{{ jenkins_http_port }}/
    install-plugin {{ item }}
    --username {{ jenkins_admin_username }}
    --password {{ jenkins_admin_password }}
    creates="{{ jenkins_home }}/plugins/{{ item }}.jpi"
  with_items: "{{ additional_plugins | default([]) }}"
  when: jenkins_plugins_check_additional == "1"

- name: Jenkins restart
  command: echo 'ready to go - i need to restart jenkins last time'
  notify: restart jenkins
